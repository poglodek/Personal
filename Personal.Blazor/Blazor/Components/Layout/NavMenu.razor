@inherits LayoutComponentBase
@rendermode InteractiveServer

<!-- Top Navbar for Mobile -->
<div class="md:hidden fixed top-0 left-0 right-0 gradientNavBar p-3 z-10">
    <button @onclick="(e) => ToggleMenu()"
            class="text-white flex items-center space-x-2">
        <span> <i class="fa-solid fa-bars"></i> Menu</span>
        <span class="transform transition-transform duration-300" style="@ArrowRotation">▼</span>
    </button>

    <!-- Nav Links centered; hidden by default -->
    <div class="overflow-hidden transition-max-height duration-300 ease-in-out" style="@MenuHeight">
        <nav class="flex flex-col items-center space-y-2 mt-3">
            <NavLink class="nav-link flex items-center px-4 py-2 text-white navItem rounded-md" href="" @onclick="ToggleMenu">
                <span class="bi bi-house-door-fill-nav-menu mr-2" aria-hidden="true"></span> Home
            </NavLink>
            <NavLink class="nav-link flex items-center px-4 py-2 text-white navItem rounded-md" href="counter" @onclick="ToggleMenu">
                <span class="bi bi-plus-square-fill-nav-menu mr-2" aria-hidden="true"></span> Counter
            </NavLink>
        </nav>
    </div>
</div>

<!-- Side Navbar for Tablet and Larger Screens -->
<div class="hidden md:flex">
    <aside class="fixed left-0 top-0 h-screen w-64 gradientNavBar text-white shadow-md overflow-y-auto">
        <nav class="p-4">
            <div>
                <NavLink class="flex items-center p-2  navItem" href="" Match="NavLinkMatch.All" ActiveClass="selectedNavItem">
                    <span class="bi bi-house-door-fill-nav-menu mr-2" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div>
                <NavLink class="flex items-center p-2 navItem" href="counter" ActiveClass="selectedNavItem">
                    <span class="bi bi-plus-square-fill-nav-menu mr-2" aria-hidden="true"></span> Counter
                </NavLink>
            </div>
        </nav>
    </aside>
</div>

@code {
    private bool _isMenuOpen = false;

    private void ToggleMenu()
    {
        _isMenuOpen = !_isMenuOpen;
    }
    

    private string ArrowRotation => _isMenuOpen ? "transform: rotate(180deg);" : "transform: rotate(0deg);";
    private string MenuHeight => _isMenuOpen ? "max-height: 500px;" : "max-height: 0;";


}
